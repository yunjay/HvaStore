{"version":3,"file":"static/webpack/static/development/pages/index.js.0063f6802785e90af33e.hot-update.js","sources":["webpack:///./components/Item.js","webpack:///./lib/formatMoney.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Link from 'next/link';\r\n\r\nimport Title from './styles/Title';\r\nimport ItemStyles from './styles/ItemStyles';\r\nimport PriceTag from './styles/PriceTag';\r\nimport formatMoney from '../lib/formatMoney';\r\n\r\nexport default class Item extends Component {\r\n  static propTypes = {\r\n      item: PropTypes.object.isRequired,\r\n    // item: PropTypes.shape({\r\n    //     title:PropTypes.string.isRequired,\r\n    //     price:PropTypes.number.isRequired, \r\n    // })\r\n  }\r\n\r\n  render() {\r\n      const item = this.props.item;\r\n\r\n      return( \r\n        <ItemStyles>\r\n            <Title>\r\n                <Link href={{\r\n                    pathname:'/item',\r\n                    query: {id: item.id},\r\n                }}>\r\n                <a>{item.title}</a>\r\n                </Link>\r\n            </Title>\r\n        </ItemStyles>\r\n        );\r\n    }\r\n}\r\n","export default function(amount) {\n  const options = {\n    style: 'currency',\n    currency: 'KRW',\n    minimumFractionDigits: 0,\n  };\n  // if its a whole, dollar amount, leave off the .00\n  const formatter = new Intl.NumberFormat('ko-KR', options);\n  return formatter.format(amount / 1);\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AASA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AAxBA;AACA;AADA;AAEA;AAEA;AACA;AACA;AACA;AANA;AACA;;;;;;;;;;;;;ACXA;AAAA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;;;;A","sourceRoot":""}
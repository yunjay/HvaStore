"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var documentRenderer_1 = require("./documentRenderer");
var relationalRenderer_1 = require("./relationalRenderer");
var relationalRendererV2_1 = require("./relationalRendererV2");
var databaseType_1 = require("../../databaseType");
var gqlAssert_1 = require("../../util/gqlAssert");
var Renderers = /** @class */ (function () {
    function Renderers() {
    }
    Renderers.create = function (databaseType, enableBeta) {
        if (enableBeta === void 0) { enableBeta = false; }
        if (enableBeta) {
            switch (databaseType) {
                case databaseType_1.DatabaseType.mongo:
                    return new documentRenderer_1.default();
                case databaseType_1.DatabaseType.mysql:
                    return new relationalRendererV2_1.default();
                case databaseType_1.DatabaseType.postgres:
                    return new relationalRendererV2_1.default();
                case databaseType_1.DatabaseType.sqlite:
                    return new relationalRendererV2_1.default();
            }
        }
        else {
            switch (databaseType) {
                case databaseType_1.DatabaseType.mongo:
                    return new documentRenderer_1.default();
                case databaseType_1.DatabaseType.mysql:
                    return new relationalRenderer_1.default();
                case databaseType_1.DatabaseType.postgres:
                    return new relationalRenderer_1.default();
                case databaseType_1.DatabaseType.sqlite:
                    return new relationalRenderer_1.default();
            }
        }
        gqlAssert_1.default.raise("Attempting to create renderer for unknown database type: " + databaseType);
        return new documentRenderer_1.default(); // Make TS happy.
    };
    return Renderers;
}());
exports.default = Renderers;
//# sourceMappingURL=index.js.map